// Licensed under CC BY 4.0
// Â© Massimiliano Biondi, 2025
// https://creativecommons.org/licenses/by/4.0/
generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model botConfig {
  id            BigInt       @id @default(autoincrement())
  awardType     BigInt
  xpPerAward    Float        @db.Real
  created_at    DateTime     @default(now()) @db.Timestamptz(6)
  awardMessage  String?
  cooldown      BigInt?
  awardChannel  String?
  whitelistmode Boolean      @default(false)
  xpAwardTypes  xpAwardTypes @relation(fields: [awardType], references: [id], onDelete: Cascade)
}

model channelBlacklist {
  id          BigInt   @id @default(autoincrement())
  channelId   String   @unique(map: "channelBlacklist_channeldId_key")
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  blacklisted Boolean  @default(true)
}

model channelConfig {
  id            BigInt   @id @default(autoincrement())
  channelId     String   @unique
  followThreads Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
}

model ignoredCharacters {
  id          BigInt   @id @default(autoincrement())
  ignoredChar String   @unique
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  ignored     Boolean? @default(true)
}

model thresholds {
  id         BigInt   @id @default(autoincrement())
  tier       Int      @unique
  xpRequired BigInt
  xpGiven    BigInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  userXp     userXp[]
}

model xpAwardTypes {
  id         BigInt      @id @default(autoincrement())
  awardType  String
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  botConfig  botConfig[]
}

model userXp {
  id           BigInt      @id @default(autoincrement())
  userId       String      @unique
  xp           Float
  created_at   DateTime    @default(now()) @db.Timestamptz(6)
  last_message DateTime    @db.Timestamptz(6)
  rank         Int?
  thresholds   thresholds? @relation(fields: [rank], references: [tier], onDelete: NoAction, onUpdate: NoAction)
}
